#!/usr/bin/python

import os
import time
import json
import logging
import subprocess
from classes import Nginx, Consul, Config
from watchers import Watcher

def listener():
    while True:
        sites_enabled = Nginx().get_sites_enabled()
        consul_vhosts = Consul().get_vhosts()

        for vhost in consul_vhosts:
            Nginx().create_vhost(vhost, sites_enabled)
            

        consul_domains = []
        for vhost in consul_vhosts:
            domain = vhost['ServiceTags'][0]
            consul_domains.append(domain)

        consul_domains = map(( lambda x: x + '.conf'), consul_domains)

        if sites_enabled != consul_domains:
          delete_vhost = sorted(set(sites_enabled) - set(consul_domains))
        else:
          delete_vhost = []

        if delete_vhost != []:
            Nginx().delete_vhost(delete_vhost)

        time.sleep(5)

    observer.join()

config = Config().read()
logging.basicConfig(filename=config['settings']['log_file'],
                    filemode='a',
                    format='%(asctime)s [ %(levelname)s ] - %(message)s',
                    datefmt='%m/%d/%Y  %H:%M:%S',
                    level=config['settings']['log_level'])
logging.info('PROXY-LISTENER: Starting proxy listener.')

''' Create a pid file '''
f = open('/tmp/proxy-listener.pid', 'w')
f.write(str(os.getpid()))
f.close()

config = Config().read()
logging.basicConfig(filename=config['settings']['log_file'],
                    filemode='a',
                    format='%(asctime)s [ %(levelname)s ] - %(message)s',
                    datefmt='%m/%d/%Y  %H:%M:%S',
                    level=config['settings']['log_level'])

Watcher().start()
listener()

